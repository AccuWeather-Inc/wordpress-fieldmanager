{"version":3,"sources":["webpack://Fieldmanager/external \"jQuery\"","webpack://Fieldmanager/webpack/bootstrap","webpack://Fieldmanager/./js/media/fieldmanager-media.js"],"names":["module","exports","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","$","fm_media_frame","document","on","e","preventDefault","this","parents","find","val","html","event","closest","siblings","click","$el","library","attr","data","type","wp","media","title","button","text","is","selection","state","get","attachment","first","attributes","remove","props","size","string","align","link","linkUrl","caption","parent","id","url","src","preview","image","$wrapper","trigger","fetch","reset","open"],"mappings":"kCAAAA,EAAOC,QAAUC,SCCbC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,UCnBHM,E,SADRC,EAAiB,IACTD,EA+GPL,GA7GFO,UAAWC,GAAI,QAAS,oBAAoB,SAASC,GACvDA,EAAEC,iBACFL,EAAEM,MAAMC,QAAS,qBAAsBC,KAAM,gBAAiBC,IAAK,GACnET,EAAEM,MAAMC,QAAS,qBAAsBC,KAAM,kBAAmBE,KAAM,OAGvEV,EAAGE,UAAWC,GAAI,QAAS,oBAAoB,SAAUQ,GACxDA,EAAMN,iBACNL,EAAEM,MAAMM,QAAQ,kBAAkBC,SAAS,oBAAoBC,WAEhEd,EAAGE,UAAWC,GAAI,QAAS,oBAAoB,SAAUQ,GACxD,IAAII,EAAMf,EAAEM,MACXU,EAAU,GACXL,EAAMN,iBAGDJ,EAAgBc,EAAIE,KAAK,SAOzBF,EAAIG,KAAM,cAAiB,QAAUH,EAAIG,KAAM,eACnDF,EAAQG,KAAOJ,EAAIG,KAAM,cAI1BjB,EAAgBc,EAAIE,KAAK,OAAUG,GAAGC,MAAM,CAE3CL,QAASA,EAGTM,MAAOP,EAAIG,KAAK,UAGhBK,OAAQ,CAEPC,KAAMT,EAAIG,KAAK,aAMZH,EAAIG,KAAM,cAAiB,QAAUH,EAAIG,KAAM,cAGnDjB,EAAgBc,EAAIE,KAAK,OAAQd,GAAI,yBAAyB,WAK7D,QAAK,IAAuBF,EAAgBc,EAAIE,KAAK,QAAahB,EAAgBc,EAAIE,KAAK,OAAQF,IAAIU,GAAG,YAA1G,CAKA,IAAIC,EAAYzB,EAAgBc,EAAIE,KAAK,OAAQU,QAAQC,IAAI,aAC5DC,EAAaH,EAAUI,QAEnBD,EAAWE,WAAWZ,OAASJ,EAAIG,KAAM,cAC7CQ,EAAUM,OAAOH,OAMpB5B,EAAgBc,EAAIE,KAAK,OAAQd,GAAI,UAAU,WAE9C,IAAI0B,EAAa5B,EAAgBc,EAAIE,KAAK,OAAQU,QAAQC,IAAI,aAAaE,QAAQC,WAQnF,GAPAE,MAAQ,CAAEC,KAAMnB,EAAIG,KAAK,iBAAmB,aAC5Ce,MAAQb,GAAGC,MAAMc,OAAOF,MAAOA,MAAOJ,GACtCI,MAAMG,MAAQ,OACdH,MAAMI,KAAO,SACbJ,MAAMK,QAAU,IAChBL,MAAMM,QAAU,GAChBxB,EAAIyB,SAAShC,KAAK,gBAAgBC,IAAKoB,EAAWY,IAC1B,SAAnBZ,EAAWV,KAAkB,CACjCc,MAAMS,IAAMT,MAAMU,IAClB,IAAIC,EAAU,uBACdA,GAAWxB,GAAGC,MAAMc,OAAOU,MAAOZ,YAE9BW,EAAU,uBACdA,GAAWxB,GAAGC,MAAMc,OAAOE,KAAMJ,OAElCW,GAAW,iEACX,IAAIE,EAAW/B,EAAIyB,SAAShC,KAAM,kBAClCsC,EAASpC,KAAMkC,GAAUG,QAAS,6BAA8B,CAAED,EAAUjB,EAAYT,QAIzFnB,EAAgBc,EAAIE,KAAK,OAAQd,GAAI,QAAQ,WAE5C,IAEC0B,EAFGH,EAAYzB,EAAgBc,EAAIE,KAAK,OAAQU,QAAQC,IAAI,aAC5Da,EAAK1B,EAAIyB,SAAShC,KAAK,gBAAgBC,MAInC,KAAOgC,IAAO,IAAMA,QAAqC,IAAxBrB,GAAGC,MAAMQ,aAC9CA,EAAaT,GAAGC,MAAMQ,WAAYY,IACvBO,QAGZtB,EAAUuB,MAAOpB,EAAa,CAAEA,GAAe,QAtF/C5B,EAAgBc,EAAIE,KAAK,OAAQiC,W","file":"js/fieldmanager-media.bundle.min.js","sourcesContent":["module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var fm_media_frame = [];\n( function( $ ) {\n\n$( document ).on( 'click', '.fm-media-remove', function(e) {\n\te.preventDefault();\n\t$(this).parents( '.fm-item.fm-media' ).find( '.fm-media-id' ).val( 0 );\n\t$(this).parents( '.fm-item.fm-media' ).find( '.media-wrapper' ).html( '' );\n});\n\n$( document ).on( 'click', '.media-wrapper a', function( event ){\n\tevent.preventDefault();\n\t$(this).closest('.media-wrapper').siblings('.fm-media-button').click();\n} );\n$( document ).on( 'click', '.fm-media-button', function( event ) {\n\tvar $el = $(this),\n\t\tlibrary = {};\n\tevent.preventDefault();\n\n\t// If the media frame already exists, reopen it.\n\tif ( fm_media_frame[ $el.attr('id') ] ) {\n\t\tfm_media_frame[ $el.attr('id') ].open();\n\t\treturn;\n\t}\n\n\t// If mime type has been restricted, make sure the library only shows that\n\t// type.\n\tif ( $el.data( 'mime-type' ) && 'all' !== $el.data( 'mime-type' ) ) {\n\t\tlibrary.type = $el.data( 'mime-type' );\n\t}\n\n\t// Create the media frame.\n\tfm_media_frame[ $el.attr('id') ] = wp.media({\n\t\t// Set the library attributes.\n\t\tlibrary: library,\n\n\t\t// Set the title of the modal.\n\t\ttitle: $el.data('choose'),\n\n\t\t// Customize the submit button.\n\t\tbutton: {\n\t\t\t// Set the text of the button.\n\t\t\ttext: $el.data('update'),\n\t\t}\n\t});\n\n\t// If mime type has been restricted, make sure the library doesn't autoselect\n\t// an uploaded file if it's the wrong mime type\n\tif ( $el.data( 'mime-type' ) && 'all' !== $el.data( 'mime-type' ) ) {\n\t\t// This event is only fired when a file is uploaded.\n\t\t// @see {wp.media.controller.Library:uploading()}\n\t\tfm_media_frame[ $el.attr('id') ].on( 'library:selection:add', function() {\n\t\t\t// This event gets fired for every frame that has ever been created on\n\t\t\t// the current page, which causes errors. We only care about the visible\n\t\t\t// frame. Also, FM can change the ID of buttons, which means some older\n\t\t\t// frames may no longer be valid.\n\t\t\tif ( 'undefined' === typeof fm_media_frame[ $el.attr('id') ] || ! fm_media_frame[ $el.attr('id') ].$el.is(':visible') ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the Selection object and the currently selected attachment.\n\t\t\tvar selection = fm_media_frame[ $el.attr('id') ].state().get('selection'),\n\t\t\t\tattachment = selection.first();\n\t\t\t// If the mime type is wrong, deselect the file.\n\t\t\tif ( attachment.attributes.type !== $el.data( 'mime-type' ) ) {\n\t\t\t\tselection.remove(attachment);\n\t\t\t}\n\t\t});\n\t}\n\n\t// When an image is selected, run a callback.\n\tfm_media_frame[ $el.attr('id') ].on( 'select', function() {\n\t\t// Grab the selected attachment.\n\t\tvar attachment = fm_media_frame[ $el.attr('id') ].state().get('selection').first().attributes;\n\t\tprops = { size: $el.data('preview-size') || 'thumbnail' };\n\t\tprops = wp.media.string.props( props, attachment );\n\t\tprops.align = 'none';\n\t\tprops.link = 'custom';\n\t\tprops.linkUrl = '#';\n\t\tprops.caption = '';\n\t\t$el.parent().find('.fm-media-id').val( attachment.id );\n\t\tif ( attachment.type == 'image' ) {\n\t\t\tprops.url = props.src;\n\t\t\tvar preview = 'Uploaded file:<br />';\n\t\t\tpreview += wp.media.string.image( props );\n\t\t} else {\n\t\t\tvar preview = 'Uploaded file:&nbsp;';\n\t\t\tpreview += wp.media.string.link( props );\n\t\t}\n\t\tpreview += '<br /><a class=\"fm-media-remove fm-delete\" href=\"#\">remove</a>';\n\t\tvar $wrapper = $el.parent().find( '.media-wrapper' );\n\t\t$wrapper.html( preview ).trigger( 'fieldmanager_media_preview', [ $wrapper, attachment, wp ] );\n\t});\n\n\t// Select the attachment when the frame opens\n\tfm_media_frame[ $el.attr('id') ].on( 'open', function() {\n\t\t// Select the current attachment inside the frame\n\t\tvar selection = fm_media_frame[ $el.attr('id') ].state().get('selection'),\n\t\t\tid = $el.parent().find('.fm-media-id').val(),\n\t\t\tattachment;\n\n\t\t// If there is a saved attachment, use it\n\t\tif ( '' !== id && -1 !== id && typeof wp.media.attachment !== \"undefined\" ) {\n\t\t\tattachment = wp.media.attachment( id );\n\t\t\tattachment.fetch();\n\t\t}\n\n\t\tselection.reset( attachment ? [ attachment ] : [] );\n\t} );\n\n\tfm_media_frame[ $el.attr('id') ].open();\n} );\n\n} )( jQuery );\n"],"sourceRoot":""}