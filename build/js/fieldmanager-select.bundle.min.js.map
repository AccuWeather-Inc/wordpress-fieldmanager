{"version":3,"sources":["webpack://Fieldmanager/external \"jQuery\"","webpack://Fieldmanager/webpack/bootstrap","webpack://Fieldmanager/./js/fieldmanager-select.js"],"names":["module","exports","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","$","fm_select_clear_terms","$fm_field","$fm_options","debug","find","remove","trigger","fm_append_options","$append_to","$options","selected","each","index","element","attr","val","length","append","fm_reset_chosen","$fm_text_field","fm_text_field_val","w","css","parents","siblings","hide","prevUntil","prev","show","fmLoadModule","on","e","keyCode","$fm_select_field","this","data","fm_typeahead_term","post","ajaxurl","action","search_term","taxonomy","fm_search_terms_nonce","fm_select","nonce","result","$resultObj","filter","optgroup_selector","children","$this_select_field"],"mappings":"kCAAAA,EAAOC,QAAUC,SCCbC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,UCpBHM,E,SAAAA,EAyGPL,EAvGLM,sBAAwB,SAAUC,EAAWC,EAAaC,GAGzDF,EAAUG,KAAM,yBAA0BC,SAG1CJ,EAAUK,QAAQ,mBAGnBC,kBAAoB,SAAUC,EAAYC,EAAUC,GAEnDD,EAASE,MAAM,SAAUC,EAAOC,GAEf,YAAZH,GAAyBG,EAAQC,KAAK,WAAY,YAGoB,GAAtEN,EAAWJ,KAAM,gBAAkBL,EAAEc,GAASE,MAAQ,KAAMC,QAC/DR,EAAWS,OAAQlB,EAAEc,QAKxBK,gBAAkB,SAAUC,EAAgBC,GAE3CD,EAAeJ,IAAKK,GAIpB,IAAIC,EAAiC,GAA3BD,EAAkBJ,OAAgB,GAC5CG,EAAeG,IAAI,CACjB,MAASD,EAAI,OAKfF,EAAeI,QAAQ,mBAAmBC,SAAS,gBAAgBpB,KAAK,mBAAmBqB,OAC3FN,EAAeI,QAAQ,mBAAmBC,SAAS,gBAAgBpB,KAAK,oBAAoBO,MAAM,SAAUC,EAAOC,GAClHd,EAAEc,GAASa,UAAU,iBAAiBC,KAAK,iBAAiBC,OAC5D7B,EAAEc,GAASc,KAAK,iBAAiBC,WA+DnCC,cA3DA,WAIC9B,EAAE,eAAe+B,GAAI,QAAS,gEAAgE,SAAUC,GAEnGA,EAAEC,SAAW,IAAMD,EAAEC,SAAW,KAGpCC,iBAAmBlC,EAAEmC,MAAMX,QAAQ,qBAAqBC,SAAS,UACjEL,eAAiBpB,EAAEmC,MAEsB,IAArCD,iBAAiBE,KAAK,aAAiE,GAA5CF,iBAAiBE,KAAK,qBACpEC,kBAAoBrC,EAAEmC,MAAMnB,MAC5BhB,EAAEsC,KAAMC,QAAS,CAAEC,OAAQ,kBAAmBC,YAAarB,eAAeJ,MAAO0B,SAAUR,iBAAiBE,KAAK,YAAaO,sBAAuBC,UAAUC,QAAS,SAAWC,GAGlLzB,kBAAoBD,eAAeJ,MACnCf,sBAAuBiC,iBAAkB,IAAI,GAC7CA,iBAAiB3B,QAAQ,kBACzBY,gBAAiBC,eAAgBC,mBAEnB,IAAVyB,IACHC,WAAa/C,EAAG8C,GAGhBC,WAAWC,OAAO,YAAYpC,MAAM,SAAUC,EAAOC,GAEpD,IAAImC,EAAoB,mBAAqBjD,EAAEmC,MAAMpB,KAAK,SAAW,KACjEmB,iBAAiB7B,KAAK4C,GAAmBhC,OAAS,EAErDT,kBAAmB0B,iBAAiB7B,KAAK4C,GAAoBjD,EAAEmC,MAAMe,SAAS,WAG9EhB,iBAAiBhB,OAAQgB,iBAAkBlC,EAAEmC,UAK/C3B,kBAAmB0B,iBAAkBa,WAAWC,OAAO,YAIxDd,iBAAiB3B,QAAQ,kBAGzBY,gBAAiBC,eAAgBC,2BAMpCrB,EAAE,eAAe+B,GAAI,QAAS,kCAAkC,SAAUC,GACzE,IAAImB,EAAqBnD,EAAEmC,MAAMX,QAAQ,qBAAqBC,SAAS,UAC5B,IAAvC0B,EAAmBf,KAAK,aAAmE,GAA9Ce,EAAmBf,KAAK,oBAA8BnC,sBAAuBkD,EAAoBnD,EAAEmC,MAAMX,QAAQ,oBAAoB,U","file":"js/fieldmanager-select.bundle.min.js","sourcesContent":["module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","( function( $ ) {\n\nfm_select_clear_terms = function( $fm_field, $fm_options, debug ) {\n\n\t// Iterate through all the options and remove those that still aren't selected\n\t$fm_field.find( 'option:not(:selected)' ).remove();\n\n\t// Inform chosen the list has been updated\n\t$fm_field.trigger(\"chosen:updated\");\n}\n\nfm_append_options = function( $append_to, $options, selected ) {\n\t// Iterate through the options provided\n\t$options.each( function( index, element ) {\n\t\t// Set as selected if needed\n\t\tif( selected == \"selected\" ) element.attr(\"selected\", \"selected\");\n\n\t\t// See if the option already exists\n\t\tif( $append_to.find( \"option[value=\" + $(element).val() + \"]\" ).length == 0 ) {\n\t\t\t$append_to.append( $(element) );\n\t\t}\n\t} );\n}\n\nfm_reset_chosen = function( $fm_text_field, fm_text_field_val ) {\n\t// Set the text\n\t$fm_text_field.val( fm_text_field_val );\n\n\t// Calculate the width of the text field appropriately\n\t// chosen.js does not do this for dynamic changes while the dropdown is open\n\tvar w = ( fm_text_field_val.length * 14 ) + 25;\n\t$fm_text_field.css({\n\t  'width': w + 'px'\n\t});\n\n\t// Display optgroup labels for matched elements\n\t// chosen.js does not do this for dynamic changes while the dropdown is open\n\t$fm_text_field.parents(\".chosen-choices\").siblings(\".chosen-drop\").find(\"li.group-result\").hide();\n\t$fm_text_field.parents(\".chosen-choices\").siblings(\".chosen-drop\").find(\"li.active-result\").each( function( index, element ) {\n\t\t$(element).prevUntil(\".group-result\").prev(\".group-result\").show();\n\t\t$(element).prev(\".group-result\").show();\n\t} );\n}\n\nfunction fm_select_init() {\n\n\t// Track changes to the chosen text field linked to the select in order to update options via Ajax\n\t// Used for taxonomy-based fields where preload is disabled\n\t$('.fm-wrapper').on( 'keyup', '.fm-item .chosen-choices input,.fm-item .chosen-search input', function( e ) {\n\t\t// Do not execute this function for arrow key presses\n\t\tif( e.keyCode >= 37 && e.keyCode <= 40 ) return;\n\n\t\t// Get the corresponding Fieldmanager select field to access data attributes needed for the Ajax call\n\t\t$fm_select_field = $(this).parents('.chosen-container').siblings('select');\n\t\t$fm_text_field = $(this);\n\n\t\tif( $fm_select_field.data(\"taxonomy\") != \"\" && $fm_select_field.data(\"taxonomyPreload\") == false ) {\n\t\t\tfm_typeahead_term = $(this).val();\n\t\t\t$.post( ajaxurl, { action: 'fm_search_terms', search_term: $fm_text_field.val(), taxonomy: $fm_select_field.data(\"taxonomy\"), fm_search_terms_nonce: fm_select.nonce }, function ( result ) {\n\n\t\t\t\t// Clear any non-selected terms before proceeding\n\t\t\t\tfm_text_field_val = $fm_text_field.val();\n\t\t\t\tfm_select_clear_terms( $fm_select_field, \"\", false );\n\t\t\t\t$fm_select_field.trigger(\"chosen:updated\");\n\t\t\t\tfm_reset_chosen( $fm_text_field, fm_text_field_val );\n\n\t\t\t\tif( result != \"\" ) {\n\t\t\t\t\t$resultObj = $( result );\n\n\t\t\t\t\t// If there are optgroups present, use special processing\n\t\t\t\t\t$resultObj.filter(\"optgroup\").each( function( index, element ) {\n\t\t\t\t\t\t// See if the optgroup already exists\n\t\t\t\t\t\tvar optgroup_selector = \"optgroup[label='\" + $(this).attr(\"label\") + \"']\";\n\t\t\t\t\t\tif( $fm_select_field.find(optgroup_selector).length > 0 ) {\n\t\t\t\t\t\t\t// The optgroup exists. Append these options to the existing optgroup.\n\t\t\t\t\t\t\tfm_append_options( $fm_select_field.find(optgroup_selector), $(this).children(\"option\") );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// The optgroup does not exist. Append the whole group.\n\t\t\t\t\t\t\t$fm_select_field.append( $fm_select_field, $(this) );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Append any options not in an optgroup\n\t\t\t\t\tfm_append_options( $fm_select_field, $resultObj.filter(\"option\") );\n\t\t\t\t}\n\n\t\t\t\t// Inform chosen this field has been updated to populate these options in the typeahead dropdown\n\t\t\t\t$fm_select_field.trigger(\"chosen:updated\");\n\n\t\t\t\t// Restore the search term since chosen automatically clears it on the update trigger above\n\t\t\t\tfm_reset_chosen( $fm_text_field, fm_text_field_val );\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Clear the non-selected options when entering or exiting the typeahead text field\n\t$('.fm-wrapper').on( 'click', '.fm-item .chosen-choices input', function( e ) {\n\t\tvar $this_select_field = $(this).parents('.chosen-container').siblings('select');\n\t\tif( $this_select_field.data(\"taxonomy\") != \"\" && $this_select_field.data(\"taxonomyPreload\") == false ) fm_select_clear_terms( $this_select_field, $(this).parents('.chosen-choices'), true );\n\t} );\n\n}\n\nfmLoadModule( fm_select_init );\n\n} )( jQuery );\n"],"sourceRoot":""}